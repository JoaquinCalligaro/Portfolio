---
// TechCard - Refactorizado usando principalmente Tailwind
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

// Imports de todos los SVGs
import htmlSvg from '../../assets/svg/html.svg';
import cssSvg from '../../assets/svg/css.svg';
import sassSvg from '../../assets/svg/sass.svg';
import tailwindSvg from '../../assets/svg/tailwindcss.svg';
import javascriptSvg from '../../assets/svg/javascript.svg';
import typescriptSvg from '../../assets/svg/typescript.svg';
import reactSvg from '../../assets/svg/react.svg';
import astroSvg from '../../assets/svg/astro-logo.svg';
import mysqlSvg from '../../assets/svg/mysql.svg';
import githubSvg from '../../assets/svg/github.svg';
import vscodeSvg from '../../assets/svg/vscode.svg';
import postmanSvg from '../../assets/svg/postman.svg';
import figmaSvg from '../../assets/svg/figma.svg';
import photohopSvg from '../../assets/svg/photohop.svg';
import canvaSvg from '../../assets/svg/canva.svg';

interface Props {
  name: string;
  hex: string;
  hexAlpha: string;
  icon: string;
  color?: string;
  rounded?: string;
  loading?: 'eager' | 'lazy';
}

const {
  name,
  hex,
  hexAlpha,
  icon,
  color = '',
  rounded = 'rounded-2xl',
  loading,
} = Astro.props as Props;

// Mapear nombres de archivos a imports
const iconMap: Record<string, ImageMetadata> = {
  'html.svg': htmlSvg,
  'css.svg': cssSvg,
  'sass.svg': sassSvg,
  'tailwindcss.svg': tailwindSvg,
  'javascript.svg': javascriptSvg,
  'typescript.svg': typescriptSvg,
  'react.svg': reactSvg,
  'astro-logo.svg': astroSvg,
  'mysql.svg': mysqlSvg,
  'github.svg': githubSvg,
  'vscode.svg': vscodeSvg,
  'postman.svg': postmanSvg,
  'figma.svg': figmaSvg,
  'photohop.svg': photohopSvg,
  'canva.svg': canvaSvg,
};

const iconSrc = iconMap[icon] || null;
---

<div
  class={`tech-card tech-card-enter group ${rounded} 
          flex flex-col items-center justify-center gap-1 p-2   cursor-pointer
          transition-all duration-300 
          bg-white/50 dark:bg-gray-900/30
          hover:transform hover:-translate-y-1 hover:scale-105
          md:min-h-20 md:min-w-30 md:p-1`}
  data-tech-name={name}
  style={`--tech-color: ${hex}; --tech-color-alpha: ${hexAlpha}; --tech-color-alpha-hover: ${hex}40; --tech-color-border: ${hex}4D; --tech-color-border-hover: ${hex}CC`}
>
  <!-- Icono -->
  <div
    class={`${color} flex-shrink-0 w-8 h-8 flex items-center justify-center transition-transform duration-300 group-hover:-translate-y-1 group-hover:scale-105`}
  >
    {
      iconSrc ? (
        <Image
          src={iconSrc}
          alt={name}
          loading={loading}
          class="h-full w-full object-contain"
        />
      ) : (
        <div class="flex h-full w-full items-center justify-center text-gray-400">
          <span>?</span>
        </div>
      )
    }
  </div>

  <!-- Label -->
  <span
    class="text-center text-xs font-medium whitespace-nowrap text-gray-700 transition-all duration-300 group-hover:pointer-events-auto group-hover:translate-y-0 group-hover:opacity-100 max-md:pointer-events-none max-md:absolute max-md:bottom-1.5 max-md:left-1/2 max-md:-translate-x-1/2 max-md:translate-y-2 max-md:opacity-0 md:static md:mt-2 md:transform-none md:opacity-100 dark:text-gray-300"
  >
    {name}
  </span>
</div>
