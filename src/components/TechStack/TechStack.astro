---
// Render-only component for Tech Stack.
// Imports `stacks` (data) from src/data/techs.ts — keep UI logic here only.
import TechStackSection from './TechStackSection.astro';
import { stacks } from '../../data/techs';

interface Props {
  className?: string;
}

const { className = '' } = Astro.props as Props;

const splitClasses = className.split(' ');
---

<div
  class="tech-stack-card w-full rounded-2xl border border-gray-300 bg-white p-6 shadow-sm dark:border-neutral-800 dark:bg-gray-950/30"
  class:list={splitClasses}
>
  <link rel="stylesheet" href="/src/styles/components/techstack.css" />
  <div class="mb-4 flex flex-col gap-4">
    <div class="mb-2 flex items-center gap-3">
      <div
        class="flex h-8 w-8 items-center justify-center rounded-full bg-gradient-to-br from-amber-400 to-orange-500"
      >
        <svg
          class="h-5 w-5 text-white"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"
          ></path>
        </svg>
      </div>
      <h3 class="text-lg font-bold text-gray-950 sm:text-xl dark:text-white">
        Tech Stack
      </h3>
    </div>

    <div class="mt-4 flex flex-col gap-4">
      {
        stacks.map((stack) => (
          <TechStackSection title={stack.title} items={stack.items} />
        ))
      }
    </div>

    <script>
      // Efecto interactivo adicional para los iconos de tecnologías
      document.addEventListener('DOMContentLoaded', () => {
        const techIcons = document.querySelectorAll(
          '.tech-stack__item'
        ) as NodeListOf<HTMLElement>;

        techIcons.forEach((icon) => {
          icon.addEventListener('mouseenter', () => {
            // Pequeña vibración al hacer hover
            icon.style.transform = 'translateY(-4px) scale(1.05)';
          });

          icon.addEventListener('mouseleave', () => {
            icon.style.transform = 'translateY(0) scale(1)';
          });

          // Efecto de click
          icon.addEventListener('click', () => {
            const techName = icon.getAttribute('data-tech-name');

            // Crear un pequeño efecto de "ping"
            icon.style.transform = 'translateY(-4px) scale(0.95)';
            setTimeout(() => {
              icon.style.transform = 'translateY(-4px) scale(1.05)';
            }, 150);

            // Opcional: podrías agregar aquí funcionalidad adicional
            // como mostrar más información sobre la tecnología
            console.log(`Clicked on ${techName}`);
          });
        });
      });
    </script>
  </div>
</div>
