---
import ErrorModal from './ErrorModal.astro';
import SuccessModal from './SuccessModal.astro';
---

<div id="hireServiceModal" class="hidden">
  <div
    class="xs:w-96 mx-auto mt-10 flex h-fit w-84 flex-col rounded-md bg-white p-6 sm:mt-16 sm:w-[512px] md:w-[640px] dark:bg-gray-950"
  >
    <div class="flex items-center justify-between">
      <h2
        class="text-xl font-semibold text-gray-950 sm:text-2xl dark:text-white"
      >
        Schedule Meeting
      </h2>
      <button
        title="Close Modal"
        aria-label="Close Modal"
        id="closeScheduleMeetingModal"
        class="rounded-md p-2 text-gray-900 dark:text-white"
        ><svg
          aria-label="Close Modal Icon"
          class="size-6"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 384 512"
        >
          <path
            d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"
          ></path></svg
        ></button
      >
    </div>
    <form id="scheduleMeetingForm" class="mt-4 flex flex-col gap-4">
      <div class="flex flex-col gap-2">
        <label for="email" class="text-gray-700 dark:text-gray-300"
          >Your Email</label
        >
        <input
          class="rounded-md border border-gray-400 bg-gray-50 p-2 text-gray-700 focus:ring-1 focus:ring-blue-500 focus:outline-hidden dark:border-neutral-800 dark:bg-gray-950/20 dark:text-gray-300"
          id="email"
          name="email"
          type="email"
          required
        />
      </div>
      <div class="flex flex-col gap-2">
        <label for="message" class="text-gray-700 dark:text-gray-300"
          >Leave me a message (optional)</label
        >
        <textarea
          class="rounded-md border border-gray-400 bg-gray-50 p-2 text-gray-700 focus:ring-1 focus:ring-blue-500 focus:outline-hidden dark:border-neutral-800 dark:bg-gray-950/20 dark:text-gray-300"
          rows="6"
          name="message"
          id="message"></textarea>
      </div>
      <button
        type="submit"
        class="w-full rounded-md bg-gradient-to-r from-blue-500 to-blue-600 p-2 font-semibold text-white transition-all duration-300 hover:from-blue-600 hover:to-blue-700 focus:ring-4 focus:ring-blue-300 focus:outline-hidden dark:bg-blue-700 dark:hover:bg-blue-800 dark:focus:ring-blue-950"
      >
        Schedule
      </button>
    </form>
  </div>
</div>
<SuccessModal />
<ErrorModal />

<script>
  import { actions } from 'astro:actions';
  import { Modal } from '../utils/modal';

  window.addEventListener('DOMContentLoaded', () => {
    const hireServiceButtons = document.getElementsByClassName(
      'hireServiceButton'
    ) as HTMLCollectionOf<HTMLElement>;
    const hireServiceModal = new Modal('hireServiceModal');

    for (const button of hireServiceButtons) {
      button.addEventListener('click', () => {
        localStorage.setItem('currentServiceId', button.dataset.serviceId!);
        hireServiceModal.show();
      });
    }

    const closeModalBtn = document.getElementById('closeScheduleMeetingModal');

    if (closeModalBtn instanceof HTMLButtonElement) {
      closeModalBtn.addEventListener('click', () => {
        hireServiceModal.hide();
      });
    }

    const scheduleMeetingForm = document.getElementById('scheduleMeetingForm');

    if (scheduleMeetingForm instanceof HTMLFormElement) {
      scheduleMeetingForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const serviceId = localStorage.getItem('currentServiceId')!;
        const formData = new FormData(scheduleMeetingForm);
        formData.append('serviceId', serviceId);

        const { error } = await actions.hireService(formData);

        hireServiceModal.hide();

        if (!error) {
          document.getElementById('openSuccessModalBtn')?.click();
        } else {
          document.getElementById('openErrorModalBtn')?.click();
        }

        scheduleMeetingForm.reset();
      });
    }
  });
</script>
