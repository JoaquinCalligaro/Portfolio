---
import { translations, type Lang } from '../../data/translations';

interface Props {
  key: string;
  fallback?: string;
  class?: string;
}

const {
  key: i18nKey,
  fallback = '',
  class: className = '',
} = Astro.props as Props;

function resolve(lang: Lang, k: string) {
  return k.split('.').reduce(
    (acc: unknown, part) => {
      if (
        acc &&
        typeof acc === 'object' &&
        Object.prototype.hasOwnProperty.call(acc, part)
      ) {
        return (acc as unknown as Record<string, unknown>)[part];
      }
      return null;
    },
    (translations as unknown as Record<string, unknown>)[lang]
  );
}

const serverLang: Lang = 'ES';
const resolved = resolve(serverLang, i18nKey) ?? fallback ?? '';
---

<span class={className} data-i18n-key={i18nKey}>{resolved}</span>
